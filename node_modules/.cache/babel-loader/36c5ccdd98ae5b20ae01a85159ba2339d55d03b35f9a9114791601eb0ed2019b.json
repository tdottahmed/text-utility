{"ast":null,"code":"import _slicedToArray from\"/home/tanbir/react-learning/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import\"./App.css\";import About from\"./components/About\";import Navbar from\"./components/Navbar\";import TextDescription from\"./components/TextDescription\";import Alert from\"./components/Alert\";import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setmode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode===\"light\"){document.body.style.backgroundColor=\"#343a40\";setmode(\"dark\");showAlert(\"Dark Mode has been enabled\",\"success\");}else{document.body.style.backgroundColor=\"white\";setmode(\"light\");showAlert(\"white Mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Text-Utility \",about:\"About\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextDescription,{title:\"Enter Your Text\",heading:\"Enter Your Text to analyze\",mode:mode,showAlert:showAlert})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{alert:alert})})]})})]})});}export default App;","map":{"version":3,"names":["useState","About","Navbar","TextDescription","Alert","BrowserRouter","Router","Routes","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","_useState2","_slicedToArray","mode","setmode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","about","className","path","element","heading"],"sources":["/home/tanbir/react-learning/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextDescription from \"./components/TextDescription\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      document.body.style.backgroundColor = \"#343a40\";\n      setmode(\"dark\");\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      setmode(\"light\");\n      showAlert(\"white Mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Text-Utility \"\n          about=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <TextDescription\n                  title=\"Enter Your Text\"\n                  heading=\"Enter Your Text to analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            />\n            <Route path=\"/about\" element={<About alert={alert} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"iHAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE1E,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwBhB,QAAQ,CAAC,OAAO,CAAC,CAAAiB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA0BrB,QAAQ,CAAC,IAAI,CAAC,CAAAsB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CACD,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAIX,IAAI,GAAK,OAAO,CAAE,CACpBY,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/Cd,OAAO,CAAC,MAAM,CAAC,CACfK,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IAAM,CACLM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7Cd,OAAO,CAAC,OAAO,CAAC,CAChBK,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CACD,mBACEf,IAAA,CAAAI,SAAA,EAAAqB,QAAA,cACEvB,KAAA,CAACN,MAAM,EAAA6B,QAAA,eACLzB,IAAA,CAACR,MAAM,EACLkC,KAAK,CAAC,eAAe,CACrBC,KAAK,CAAC,OAAO,CACblB,IAAI,CAAEA,IAAK,CACXW,UAAU,CAAEA,UAAW,CACxB,CAAC,cAEFpB,IAAA,CAACN,KAAK,EAACmB,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBb,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAC7BvB,KAAA,CAACL,MAAM,EAAA4B,QAAA,eACLzB,IAAA,CAACF,KAAK,EACJ+B,IAAI,CAAC,GAAG,CACRC,OAAO,cACL9B,IAAA,CAACP,eAAe,EACdiC,KAAK,CAAC,iBAAiB,CACvBK,OAAO,CAAC,4BAA4B,CACpCtB,IAAI,CAAEA,IAAK,CACXM,SAAS,CAAEA,SAAU,CACtB,CACF,CACF,CAAC,cACFf,IAAA,CAACF,KAAK,EAAC+B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAE9B,IAAA,CAACT,KAAK,EAACsB,KAAK,CAAEA,KAAM,CAAE,CAAE,CAAE,CAAC,EACnD,CAAC,CACN,CAAC,EACA,CAAC,CACT,CAAC,CAEP,CAEA,cAAe,CAAAR,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}