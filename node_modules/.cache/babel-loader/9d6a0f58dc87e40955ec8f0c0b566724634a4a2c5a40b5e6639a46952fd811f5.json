{"ast":null,"code":"var _jsxFileName = \"/home/tanbir/react-learning/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextDescription from \"./components/TextDescription\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Navbar, {\n    title: \"Text-Utility \",\n    about: \"About\",\n    mode: mode,\n    toggleMode: toggleMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 14\n  }, this)\n}]);\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      document.body.style.backgroundColor = \"#343a40\";\n      setmode(\"dark\");\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      setmode(\"light\");\n      showAlert(\"white Mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text-Utility \",\n      about: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(TextDescription, {\n        title: \"Enter Your Text\",\n        heading: \"Enter Your Text to analyze\",\n        mode: mode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \"ReactDOM.createRoot(document.getElementById(\\\"root\\\")).render(\", /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n          router: router\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"DFI/VtKa0afgKVbGCfCWhAWwjxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextDescription","Alert","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","router","createBrowserRouter","path","element","title","about","mode","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","document","body","style","backgroundColor","children","className","heading","React","StrictMode","RouterProvider","_c","$RefreshReg$"],"sources":["/home/tanbir/react-learning/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextDescription from \"./components/TextDescription\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Navbar\n    title=\"Text-Utility \"\n    about=\"About\"\n    mode={mode}\n    toggleMode={toggleMode}\n  />,\n  },\n]);\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      document.body.style.backgroundColor = \"#343a40\";\n      setmode(\"dark\");\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      setmode(\"light\");\n      showAlert(\"white Mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"Text-Utility \"\n        about=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextDescription\n          title=\"Enter Your Text\"\n          heading=\"Enter Your Text to analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* <About /> */}\n\n        ReactDOM.createRoot(document.getElementById(\"root\")).render(\n          <React.StrictMode>\n            <RouterProvider router={router} />\n          </React.StrictMode>\n        )\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}