[{"/home/tanbir/react-learning/text-utility/src/index.js":"1","/home/tanbir/react-learning/text-utility/src/reportWebVitals.js":"2","/home/tanbir/react-learning/text-utility/src/App.js":"3","/home/tanbir/react-learning/text-utility/src/components/About.js":"4","/home/tanbir/react-learning/text-utility/src/components/Navbar.js":"5","/home/tanbir/react-learning/text-utility/src/components/Alert.js":"6","/home/tanbir/react-learning/text-utility/src/components/TextDescription.js":"7"},{"size":610,"mtime":1694944540000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1694944540000,"results":"10","hashOfConfig":"9"},{"size":1747,"mtime":1695361043300,"results":"11","hashOfConfig":"9"},{"size":5492,"mtime":1695296060475,"results":"12","hashOfConfig":"9"},{"size":1934,"mtime":1695360990536,"results":"13","hashOfConfig":"9"},{"size":457,"mtime":1695114350958,"results":"14","hashOfConfig":"9"},{"size":6337,"mtime":1695362088992,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sscmrd",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tanbir/react-learning/text-utility/src/index.js",[],[],"/home/tanbir/react-learning/text-utility/src/reportWebVitals.js",[],[],"/home/tanbir/react-learning/text-utility/src/App.js",["39","40","41","42"],[],"import { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextDescription from \"./components/TextDescription\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      document.body.style.backgroundColor = \"#343a40\";\n      setmode(\"dark\");\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      setmode(\"light\");\n      showAlert(\"white Mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"Text-Utility \"\n          about=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route */}\n              {/* path=\"/\" */}\n              {/* element={ */}\n                <TextDescription\n                  title=\"Enter Your Text\"\n                  heading=\"Enter Your Text to analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              {/* }\n            /> */}\n            {/* <Route path=\"/about\" element={<About alert={alert} />} /> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","/home/tanbir/react-learning/text-utility/src/components/About.js",[],[],"/home/tanbir/react-learning/text-utility/src/components/Navbar.js",["43","44","45"],[],"import React from \"react\";\n// import { Link } from \"react-router-dom\";\nexport default function Navbar(props) {\n  return (\n    <div>\n      <nav\n        className={`navbar navbar-expand-lg px-4 navbar-${props.mode} bg-${props.mode}`}\n      >\n        {/* <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link> */}\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"/navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              {/* <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link> */}\n              <a href=\"#\" className=\"nav-link\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              {/* <Link to=\"/about\" className=\"nav-link\">\n                {props.about}\n              </Link> */}\n              <a href=\"#\" className=\"nav-link\">\n                {props.about}\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div\n          className={`form-check form-switch text-${\n            props.mode === \"light\" ? \"dark\" : \"light\"\n          }`}\n        >\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n            onClick={props.toggleMode}\n          />\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            Dark\n          </label>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","/home/tanbir/react-learning/text-utility/src/components/Alert.js",[],[],"/home/tanbir/react-learning/text-utility/src/components/TextDescription.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":7,"column":27,"nodeType":"48","messageId":"49","endLine":7,"endColumn":33},{"ruleId":"46","severity":1,"message":"51","line":7,"column":35,"nodeType":"48","messageId":"49","endLine":7,"endColumn":41},{"ruleId":"46","severity":1,"message":"52","line":7,"column":43,"nodeType":"48","messageId":"49","endLine":7,"endColumn":48},{"ruleId":"53","severity":1,"message":"54","line":12,"column":9,"nodeType":"55","endLine":12,"endColumn":46},{"ruleId":"53","severity":1,"message":"54","line":33,"column":15,"nodeType":"55","endLine":33,"endColumn":48},{"ruleId":"53","severity":1,"message":"54","line":41,"column":15,"nodeType":"55","endLine":41,"endColumn":48},"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]