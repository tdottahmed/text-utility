[{"/home/tanbir/react-learning-main/src/index.js":"1","/home/tanbir/react-learning-main/src/App.js":"2","/home/tanbir/react-learning-main/src/reportWebVitals.js":"3","/home/tanbir/react-learning-main/src/components/Navbar.js":"4","/home/tanbir/react-learning-main/src/components/Alert.js":"5","/home/tanbir/react-learning-main/src/components/TextDescription.js":"6","/home/tanbir/react-learning-main/src/components/About.js":"7"},{"size":610,"mtime":1694944540000,"results":"8","hashOfConfig":"9"},{"size":1721,"mtime":1695292562737,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1694944540000,"results":"11","hashOfConfig":"9"},{"size":1934,"mtime":1695292479811,"results":"12","hashOfConfig":"9"},{"size":457,"mtime":1695114350958,"results":"13","hashOfConfig":"9"},{"size":6225,"mtime":1695292380845,"results":"14","hashOfConfig":"9"},{"size":5491,"mtime":1694944540000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17nh8fh",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tanbir/react-learning-main/src/index.js",[],[],"/home/tanbir/react-learning-main/src/App.js",[],[],"/home/tanbir/react-learning-main/src/reportWebVitals.js",[],[],"/home/tanbir/react-learning-main/src/components/Navbar.js",["38","39","40"],[],"import React from \"react\";\n// import { Link } from \"react-router-dom\";\nexport default function Navbar(props) {\n  return (\n    <div>\n      <nav\n        className={`navbar navbar-expand-lg px-4 navbar-${props.mode} bg-${props.mode}`}\n      >\n        {/* <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link> */}\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"/navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              {/* <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link> */}\n              <a href=\"#\" className=\"nav-link\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              {/* <Link to=\"/about\" className=\"nav-link\">\n                {props.about}\n              </Link> */}\n              <a href=\"#\" className=\"nav-link\">\n                {props.about}\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div\n          className={`form-check form-switch text-${\n            props.mode === \"light\" ? \"dark\" : \"light\"\n          }`}\n        >\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n            onClick={props.toggleMode}\n          />\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            Dark\n          </label>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","/home/tanbir/react-learning-main/src/components/Alert.js",[],[],"/home/tanbir/react-learning-main/src/components/TextDescription.js",[],[],"/home/tanbir/react-learning-main/src/components/About.js",["41"],[],{"ruleId":"42","severity":1,"message":"43","line":12,"column":9,"nodeType":"44","endLine":12,"endColumn":46},{"ruleId":"42","severity":1,"message":"43","line":33,"column":15,"nodeType":"44","endLine":33,"endColumn":48},{"ruleId":"42","severity":1,"message":"43","line":41,"column":15,"nodeType":"44","endLine":41,"endColumn":48},{"ruleId":"45","severity":1,"message":"46","line":10,"column":23,"nodeType":"47","messageId":"48","endLine":10,"endColumn":25},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]